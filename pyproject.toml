[build-system]
requires = ["setuptools", "install", "wheel", "cffi"]
build-backend = "setuptools.build_meta"

[project]
name = "helics"
authors = [
    {name = "Dheepak Krishnamurthy", email = "me@kdheepak.com"},
]
maintainers = [
    {name = "Dheepak Krishnamurthy", email = "me@kdheepak.com"},
    {name = "Ryan Mast", email = "mast9@llnl.gov"},
]
description = "Python HELICS bindings"
readme = "README.md"
requires-python = ">=3.6"
keywords = ["helics", "co-simulation"]
license = {text = "MIT License"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Environment :: Console",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Utilities",
    "Topic :: Software Development",
]
dependencies = [
    "cffi>=1.6.0",
    "strip-hints",
    "click>=8"
]
#dynamic = ["version"]

[project.optional-dependencies]
cli = ["flask>=2", "requests", "flask-restful", "flask-cors", "pandas", "SQLAlchemy", "matplotlib"]
tests = ["pytest", "pytest-ordering", "pytest-cov", "pytest-runner"]
dev = ["build", "pre-commit"]
docs = ["mkdocs", "inari[mkdocs]", "mkdocs-material", "black", "pygments", "pymdown-extensions"]

[project.scripts]
helics = "helics.cli:cli",
helics-cli = "helics.cli:cli",
helics_app = "helics.bin:helics_app",
helics_broker = "helics.bin:helics_broker",
helics_broker_server = "helics.bin:helics_broker_server",
helics_player = "helics.bin:helics_player",
helics_recorder = "helics.bin:helics_recorder",

[project.urls]
Homepage = "hhttps://github.com/GMLC-TDC/pyhelics"
Discussions = "https://github.com/GMLC-TDC/HELICS/discussions"
Documentation = "https://python.helics.org/"
"Issue Tracker" = "https://github.com/GMLC-TDC/pyhelics/issues"
"Source Code" = "https://github.com/GMLC-TDC/pyhelics"

[tool.setuptools.packages.find]
include = ["helics", "helics.*"]

[tool.setuptools_scm]
version_file = "helics/_version.py"

#[tool.pytest.ini_options]
#addopts = ["--import-mode=importlib"]
#pythonpath = "."

# TODO: set up pre-commit.ci for linting, formatting, etc
[tool.pylint.messages_control]
max-line-length = "100"
good-names-rgxs = "x,y,e,md,sw"
disable = [
  "line-too-long",
  "missing-module-docstring",
  "missing-class-docstring",
  "missing-function-docstring",
  "duplicate-code",
  "too-many-branches",
  "too-many-statements",
  "unused-variable",
  "invalid-name",
  "no-member",
  "too-many-nested-blocks",
  "fixme",
  "too-many-locals",
  "too-many-arguments",
  "unused-argument",
  "unspecified-encoding",
  "import-error",
]
