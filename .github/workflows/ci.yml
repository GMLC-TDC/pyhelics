name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ macOS-latest, ubuntu-latest, windows-latest ]
        python-version: [ '3.8','3.7','3.6' ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install -U pip install wheel setuptools cffi
    - name: Download helics library and run pip install
      run: |
        python setup.py download
        pip install -e "."
    - name: Run pytests
      run: |
        pip install pytest pytest-ordering pytest-cov
        pytest -vvv
    - name: Generate coverage report
      run: |
        pytest --cov=./ --cov-report=xml:unit.coverage.xml
    - name: Upload unit test coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./unit.coverage.xml
        flags: unit
        env_vars: PYTHON
        name: codecov-unit
        fail_ci_if_error: false

  build-wheels:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macOS-latest
            target: macosx_10_9_x86_64
            python3-version: '3.8'
            python2-version: '2.7'
          - os: ubuntu-latest
            target: manylinux2010_x86_64
            python3-version: '3.8'
            python2-version: '2.7'
          - os: windows-latest
            target: win_amd64
            python3-version: '3.8'
            python2-version: '2.7'
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python3
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python3-version }}

    - name: Install python3 dependencies
      run: |
        python -m pip install -U pip install wheel setuptools cffi

    - name: Download helics library
      run: python setup.py download

    - name: Build python3 wheel
      run: |
        python setup.py bdist_wheel --plat-name=${{ matrix.target }}

    # Steps to build Python 2 wheels
    - name: Set up Python2
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python2-version }}

    - name: Install python2 dependencies
      run: |
        python -m pip install -U pip install wheel setuptools cffi strip-hints

    - name: Build python2 wheel
      run: |
        strip-hints helics/capi.py > tmp
        rm helics/capi.py
        mv tmp helics/capi.py
        python setup.py bdist_wheel --plat-name=${{ matrix.target }}
    # End steps to build Python 2 wheels

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: python-dist
        path: dist/*

  build-sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install -U pip install wheel setuptools cffi

    - name: Download helics header files and build sdist
      run: |
        python setup.py download
        rm -rf helics/install/bin
        rm -rf helics/install/lib || true
        rm -rf helics/install/lib64 || true
        rm -rf helics/install/share || true
        python setup.py sdist

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: python-dist
        path: dist/*
